name: "CI"
inputs:
  target:
    description: "target to test"
    required: true
  github_token:
    description: "SSIA"
    required: true
  codecov_token:
    description: "SSIA"
  github_workspace:
    description: "github.workspace"
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: "~1.23.1"
        cache: true
        cache-dependency-path: go.sum

    - name: Go Build
      working-directory: ${{ inputs.target }}
      shell: bash
      run: |
        go mod tidy
        go build -v ./...

    - name: Setup staticcheck
      working-directory: ${{ inputs.target }}
      shell: bash
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: staticcheck
      working-directory: ${{ inputs.target }}
      shell: bash
      run: |
        staticcheck ./...

    - name: Go Test
      working-directory: ${{ inputs.target }}
      shell: bash
      run: |
        TARGET=$(go list ./... | grep -v "mock" | grep -v "infra/fw/gqlgen" | grep -v "configs" | grep -v "infra/grpc")
        go test $TARGET -v -coverprofile=coverage.out
        exit ${PIPESTATUS[0]}

    - name: Upload unit test coverage to Codecov
      if: ${{ inputs.codecov_token != '' }}
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
      with:
        token: ${{ inputs.codecov_token }}
        directory: ${{ inputs.github_workspace }}
        file: ${{ inputs.github_workspace }}/${{ inputs.target }}/coverage
        fail_ci_if_error: false
        verbose: true
        flags: ${{ inputs.target }}