name: ci_article_service

on:
  push:
    branches:
      - "feat/**"
      - "refactor/**"
      - "bugfix/**"
      - "hotfix/**"
      - "main"
    paths:
      - "article-service/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "article-service/**"
  workflow_call:

permissions: write-all

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: "~1.23.1"
          cache: true
          cache-dependency-path: go.sum

      - name: Go Build
        working-directory: article-service
        run: |
          go mod tidy
          go build -v ./...

      - name: Setup reviewdog
        uses: reviewdog/action-setup@e04ffabe3898a0af8d0fb1af00c188831c4b5893 # v1.3.2
        with:
          reviewdog_version: latest

      - name: Setup staticcheck
        working-directory: article-service
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: staticcheck with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: article-service
        run: |
          staticcheck ./... | reviewdog -f=staticcheck -reporter=github-pr-check -level warning

      - name: Go Test
        working-directory: article-service
        run: |
          TARGET=$(go list ./... | grep -v "mock" | grep -v "configs" | grep -v "infra/grpc")
          go test $TARGET -v -coverprofile=coverage.out
          exit ${PIPESTATUS[0]}

      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ github.workspace }}
          file: ${{ github.workspace }}/article-service/coverage
          fail_ci_if_error: false
          verbose: true
          flags: article-service
