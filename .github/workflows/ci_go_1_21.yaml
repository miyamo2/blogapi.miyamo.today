name: ci_go_1_21

on:
  push:
    branches:
      - "main"
      - "develop"
      - "feature/**"
      - "refactor/**"
      - "bugfix/**"
      - "hotfix/**"
      - "ci/**"
      - "release/**"
  pull_request:
    branches:
      - "main"
      - "develop"
      - "release/**"
  workflow_call:

permissions: write-all

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.21.0"
          # cache: true
          # cache-dependency-path: go.sum

      - name: Go Lint
        uses: golangci/golangci-lint-action@v3

      - name: Go Build
        run: |
          go mod tidy
          go build -v ./...

      - name: Go Test
        run: |
          go test ./... -v -cover -race -coverpkg=./... -covermode=atomic -coverprofile=coverage.tmp.out | tee test_output.txt
          exit ${PIPESTATUS[0]}

      - name: Exclude TestHelper files from coverage
        run: |
          cat coverage.tmp.out | grep -v "test_helper.go" > coverage.out
          go tool cover -func coverage.out

      - name: Create Coverage Report to PR comment
        if: github.event_name == 'pull_request'
        run: |
          go tool cover -func=coverage.out | awk '/total/ {print "| **" $$1 "** | **" $$3 "** |"}' | tee coverage.txt
          cat test_output.txt | grep 'ok.*coverage' | awk '{print "| " $$2 " | " $$5 " |"}' | tee -a coverage.txt
          echo "## Test Coverage Report" > coverage_with_header.txt
          echo "| Package           | Coverage |" >> coverage_with_header.txt
          echo "|-------------------|----------|" >> coverage_with_header.txt
          cat coverage.txt >> coverage_with_header.txt
          mv coverage_with_header.txt coverage.txt
          rm test_output.txt

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.COVERAGE_COMMENT_ON_PR }}
          issue-number: ${{ github.event.number }}
          body-path: "coverage.txt"

      - name: Upload coverage to Codecov
        if: startsWith(github.head_ref, 'release')
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: true
          verbose: true
