// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: copyfrom.go

package article

import (
	"context"
)

// iteratorForPreAttachTags implements pgx.CopyFromSource.
type iteratorForPreAttachTags struct {
	rows                 []PreAttachTagsParams
	skippedFirstNextCall bool
}

func (r *iteratorForPreAttachTags) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForPreAttachTags) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].ArticleID,
		r.rows[0].Name,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForPreAttachTags) Err() error {
	return nil
}

func (q *Queries) PreAttachTags(ctx context.Context, arg []PreAttachTagsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"tmp_tags"}, []string{"id", "article_id", "name", "created_at", "updated_at"}, &iteratorForPreAttachTags{rows: arg})
}
