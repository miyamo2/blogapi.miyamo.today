// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Node interface {
	IsNode()
	GetID() string
}

type ArticleConnection struct {
	Edges      []*ArticleEdge `json:"edges"`
	PageInfo   *PageInfo      `json:"pageInfo"`
	TotalCount int            `json:"totalCount"`
}

type ArticleEdge struct {
	Cursor string       `json:"cursor"`
	Node   *ArticleNode `json:"node"`
}

type ArticleNode struct {
	ID           string                `json:"id"`
	Title        string                `json:"title"`
	Content      string                `json:"content"`
	ThumbnailURL string                `json:"thumbnailUrl"`
	CreatedAt    time.Time             `json:"createdAt"`
	UpdatedAt    time.Time             `json:"updatedAt"`
	Tags         *ArticleTagConnection `json:"tags"`
}

func (ArticleNode) IsNode()            {}
func (this ArticleNode) GetID() string { return this.ID }

type ArticleTagConnection struct {
	Edges      []*ArticleTagEdge `json:"edges"`
	PageInfo   *PageInfo         `json:"pageInfo"`
	TotalCount int               `json:"totalCount"`
}

type ArticleTagEdge struct {
	Cursor string          `json:"cursor"`
	Node   *ArticleTagNode `json:"node"`
}

type ArticleTagNode struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type Mutation struct {
}

type NoopInput struct {
	ClientMutationID *string `json:"clientMutationId,omitempty"`
}

type NoopPayload struct {
	ClientMutationID *string `json:"clientMutationId,omitempty"`
}

type PageInfo struct {
	HasNextPage     *bool  `json:"hasNextPage,omitempty"`
	HasPreviousPage *bool  `json:"hasPreviousPage,omitempty"`
	StartCursor     string `json:"startCursor"`
	EndCursor       string `json:"endCursor"`
}

type Query struct {
}

type TagArticleConnection struct {
	Edges      []*TagArticleEdge `json:"edges"`
	PageInfo   *PageInfo         `json:"pageInfo"`
	TotalCount int               `json:"totalCount"`
}

type TagArticleEdge struct {
	Cursor string          `json:"cursor"`
	Node   *TagArticleNode `json:"node"`
}

type TagArticleNode struct {
	ID           string    `json:"id"`
	Title        string    `json:"title"`
	ThumbnailURL string    `json:"thumbnailUrl"`
	CreatedAt    time.Time `json:"createdAt"`
	UpdatedAt    time.Time `json:"updatedAt"`
}

func (TagArticleNode) IsNode()            {}
func (this TagArticleNode) GetID() string { return this.ID }

type TagConnection struct {
	Edges      []*TagEdge `json:"edges"`
	PageInfo   *PageInfo  `json:"pageInfo"`
	TotalCount int        `json:"totalCount"`
}

type TagEdge struct {
	Cursor string   `json:"cursor"`
	Node   *TagNode `json:"node"`
}

type TagNode struct {
	ID       string                `json:"id"`
	Name     string                `json:"name"`
	Articles *TagArticleConnection `json:"articles"`
}
